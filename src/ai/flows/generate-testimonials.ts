// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered testimonial generator that tailors endorsements based on visitor profile.
 *
 * - generateRelevantTestimonials - A function that generates testimonials relevant to a user profile.
 * - GenerateRelevantTestimonialsInput - The input type for the generateRelevantTestimonials function.
 * - GenerateRelevantTestimonialsOutput - The return type for the generateRelevantTestimonials function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateRelevantTestimonialsInputSchema = z.object({
  userProfile: z
    .string()
    .describe(
      'The user profile (e.g., student, developer, business owner) to tailor the testimonials.'
    ),
  numberOfTestimonials: z
    .number()
    .describe('The number of testimonials to generate.'),
});
export type GenerateRelevantTestimonialsInput = z.infer<
  typeof GenerateRelevantTestimonialsInputSchema
>;

const GenerateRelevantTestimonialsOutputSchema = z.object({
  testimonials: z.array(z.string()).describe('An array of generated testimonials.'),
});
export type GenerateRelevantTestimonialsOutput = z.infer<
  typeof GenerateRelevantTestimonialsOutputSchema
>;

export async function generateRelevantTestimonials(
  input: GenerateRelevantTestimonialsInput
): Promise<GenerateRelevantTestimonialsOutput> {
  return generateRelevantTestimonialsFlow(input);
}

const generateRelevantTestimonialsPrompt = ai.definePrompt({
  name: 'generateRelevantTestimonialsPrompt',
  input: {schema: GenerateRelevantTestimonialsInputSchema},
  output: {schema: GenerateRelevantTestimonialsOutputSchema},
  prompt: `You are an AI that generates testimonials for the mDemy platform.  The testimonials should be relevant to the specified user profile.

Generate {{numberOfTestimonials}} testimonials for the following user profile: {{{userProfile}}}. Make sure the testimonials highlight the value proposition for mDemy, which provides YouTube tutorials, free and premium source code, and project listings. 

Ensure that each testimonial is concise, genuine-sounding, and builds trust in the platform. Vary the content to highlight different aspects of the platform (e.g., quality of tutorials, usefulness of code, project variety). The testimonials should sound like real users are saying these things. 

Output in JSON format.`,
});

const generateRelevantTestimonialsFlow = ai.defineFlow(
  {
    name: 'generateRelevantTestimonialsFlow',
    inputSchema: GenerateRelevantTestimonialsInputSchema,
    outputSchema: GenerateRelevantTestimonialsOutputSchema,
  },
  async input => {
    const {output} = await generateRelevantTestimonialsPrompt(input);
    return output!;
  }
);
